{"version":3,"sources":["scripts/main.js"],"names":["heading","document","querySelector","firstElementChild","headingItems","querySelectorAll","tableBody","tableRows","children","tableSort","column","index","indexOf","sorted","sort","rowA","rowB","first","innerText","second","transformSalary","cell","slice","split","join","dataset","type","localeCompare","forEach","item","remove","append","setAttribute","addEventListener","e","target","closest","contains"],"mappings":";AAAA,aAuCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArCA,IAAMA,EAAUC,SAASC,cAAc,SAASC,kBAC1CC,EAAmBJ,EAAAA,EAAQK,iBAAiB,OAC5CC,EAAYL,SAASC,cAAc,SACnCK,EAAgBD,EAAAA,EAAUE,UAQhC,SAASC,EAAUC,GACXC,IAAAA,EAAQP,EAAaQ,QAAQF,GAmB7BG,EAASN,EAAUO,KAjBJ,SAACC,EAAMC,GACpBC,IAAAA,EAAQF,EAAKP,SAASG,GAAOO,UAC7BC,EAASH,EAAKR,SAASG,GAAOO,UAE9BE,EAAkB,SAACC,GAChBA,OAAAA,EAAKC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAGnCd,MAAwB,SAAxBA,EAAOe,QAAQC,KACVT,EAAMU,cAAcR,GACM,WAAxBT,EAAOe,QAAQC,KACjBN,EAAgBH,GAASG,EAAgBD,GACf,WAAxBT,EAAOe,QAAQC,KACjBT,EAAQE,OADV,IAOTZ,EAAUqB,QAAQ,SAAAC,GAAQA,OAAAA,EAAKC,WAC/BjB,EAAOe,QAAQ,SAAAC,GAAQvB,OAAAA,EAAUyB,OAAOF,KA7B1CzB,EAAawB,QAAQ,SAAAC,GAAQA,OAAAA,EAAKG,aAAa,QAAS,YACxD5B,EAAa,GAAGqB,QAAQC,KAAO,OAC/BtB,EAAa,GAAGqB,QAAQC,KAAO,OAC/BtB,EAAa,GAAGqB,QAAQC,KAAO,SAC/BtB,EAAa,GAAGqB,QAAQC,KAAO,SA4B/B1B,EAAQiC,iBAAiB,QAAS,SAACC,GAC3BL,IAAAA,EAAOK,EAAEC,OAAOC,QAAQ,WAEzBP,GAAS7B,EAAQqC,SAASR,IAI/BpB,EAAUoB","file":"main.f3f2a8d1.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst heading = document.querySelector('thead').firstElementChild;\nconst headingItems = [...heading.querySelectorAll('th')];\nconst tableBody = document.querySelector('tbody');\nconst tableRows = [...tableBody.children];\n\nheadingItems.forEach(item => item.setAttribute('class', 'column'));\nheadingItems[0].dataset.type = 'text';\nheadingItems[1].dataset.type = 'text';\nheadingItems[2].dataset.type = 'number';\nheadingItems[3].dataset.type = 'salary';\n\nfunction tableSort(column) {\n  const index = headingItems.indexOf(column);\n\n  const callbackSort = (rowA, rowB) => {\n    const first = rowA.children[index].innerText;\n    const second = rowB.children[index].innerText;\n\n    const transformSalary = (cell) => {\n      return cell.slice(1).split(',').join('');\n    };\n\n    if (column.dataset.type === 'text') {\n      return first.localeCompare(second);\n    } else if (column.dataset.type === 'salary') {\n      return transformSalary(first) - transformSalary(second);\n    } else if (column.dataset.type === 'number') {\n      return first - second;\n    }\n  };\n\n  const sorted = tableRows.sort(callbackSort);\n\n  tableRows.forEach(item => item.remove());\n  sorted.forEach(item => tableBody.append(item));\n}\n\nheading.addEventListener('click', (e) => {\n  const item = e.target.closest('.column');\n\n  if (!item || !heading.contains(item)) {\n    return;\n  }\n\n  tableSort(item);\n});\n"]}